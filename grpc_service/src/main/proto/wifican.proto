syntax = "proto3";
package wifican;

option go_package = "./wifican";

import "google/protobuf/empty.proto";
option java_multiple_files = true;
option java_package = "com.olaelectric.mfg.grpc.wifican";

// Register message with request for subscribing to list of required CAN IDs
message Register {
    repeated uint32 can_ids = 1; // CAN IDs to subscribe to
}

// Response statuses
enum RespStatus {
    RESP_NONE = 0;
    RESP_SUCCESS = 1;
    RESP_FAIL = 2;
}

// Generic response message
message Response {
    RespStatus status = 1;
    string status_msg = 2;
}

// CAN packet with raw CAN frame data
message CANPacket {
    bytes can_frame = 1; // 16 Bytes of RAW CAN frame
}

// Wican service endpoints
service WifiCanRpc {
    // First call to be made with list of CAN IDs to subscribe to
    rpc Init (Register) returns (Response) {};
    // Deinit to be called before disconnecting from the gRPC server for any
    // clean up calls
    rpc Deinit (google.protobuf.Empty) returns (Response) {};

    // Read a CAN Frame to the gRPC server
    rpc ReadCanFrame (google.protobuf.Empty) returns (CANPacket) {};
    // Write a CAN Frame to the gRPC server
    rpc WriteCanFrame (CANPacket) returns (Response) {};

    // Read a stream of CAN Frames (Filters based on subscribed CAN IDs)
    rpc ReadCanStream (google.protobuf.Empty) returns (stream CANPacket) {};
    // Write a stream of CAN Frames
    rpc WriteCanStream (stream CANPacket) returns (Response) {};

    // Dumps a stream of all CAN packets without any filtering
    rpc CanDumpStream (google.protobuf.Empty) returns (stream CANPacket) {};
}
